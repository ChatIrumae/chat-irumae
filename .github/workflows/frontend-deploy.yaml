# .github/workflows/frontend-deploy.yml

name: Frontend CI/CD Pipeline

on:
  push:
    branches: [main]
    paths:
      - "frontend/**"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # 1. 소스 코드 체크아웃
      - name: Checkout code
        uses: actions/checkout@v4

      # 2. Docker Buildx 설정
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # 3. Docker Hub 로그인 (시크릿 이름 확인 필요)
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }} # 또는 secrets.DOCKER_USER
          password: ${{ secrets.DOCKERHUB_TOKEN }} # 또는 secrets.DOCKER_TOKEN

      # 4. Docker 이미지 빌드 및 푸시 (context 및 tags 수정!)
      - name: Build & Push image
        uses: docker/build-push-action@v5
        with:
          context: ./frontend # <-- frontend 디렉토리를 빌드 컨텍스트로 명시
          push: true
          # 이미지 이름에 '-frontend'를 추가하여 백엔드와 구분 (매우 중요!)
          tags: beming/${{ github.event.repository.name }}-frontend:${{ github.sha }}

      # 5. GitOps(Infra) 리포지토리 체크아웃
      - name: Checkout infra repo
        uses: actions/checkout@v4
        with:
          repository: beming-dev/stock-simulator-cicd
          token: ${{ secrets.INFRA_TOKEN }}
          path: infra

      # 6. yq 설치 (추가됨)
      - name: Install yq
        uses: mikefarah/yq@v4.34.1

      # 7. Kustomize 이미지 태그 업데이트 (IMAGE_NAME 수정!)
      - name: Update Kustomize image tag
        run: |
          cd infra/base/frontend

          # 이미지 이름에 '-frontend'를 추가
          REPO_NAME=${{ github.event.repository.name }}
          IMAGE_NAME="beming/chat-irumae-frontend"
          NEW_TAG=${{ github.sha }}

          echo "🔧 Updating image $IMAGE_NAME to tag $NEW_TAG"
          yq e '(.images[] | select(.name == "'"$IMAGE_NAME"'") ).newTag = "'"$NEW_TAG"'"' -i kustomization.yaml

          echo "✅ Diff after update:"
          git -C ../../.. diff

      # 8. 변경사항 커밋 및 푸시
      - name: Commit & Push infra changes
        run: |
          cd infra
          git config user.name "github-actions[bot]"
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git add base/frontend/kustomization.yaml # <-- 수정한 파일만 명시적으로 add

          if ! git diff --staged --quiet; then
            # 커밋 메시지에 frontend 명시
            git commit -m "chore(frontend): Bump ${{ github.repository }} image to ${{ github.sha }}"
            git push
          else
            echo "No changes to commit."
          fi
